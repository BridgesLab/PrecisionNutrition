---
title: "Liver mRNA Setup"
author: "Dave Bridges"
format: html
editor: source
---

```{r load}
library(readr)
library(dplyr)
library(tidyr)
rna.datatfile <- 'dataset.mrna.Svenson_DO_HFD.v12.Rds'
all.data <- readRDS(rna.datatfile)
```

# Extracting Raw RNAseq Data

Pulled out raw RNAseq data from the RDS object

```{r extract}
rna.data.raw <- all.data$data$raw %>% as.data.frame()

library(janitor)
rna.data.raw %>% t %>% as.data.frame -> rna.data
gene.annotation <- all.data$annot.mrna %>%
  mutate(start.true = start*1E6,
         end.true = end*1E6)
  
```

Pulled out phenotype data and group data per sample

```{r collecting-phenotype-data}
phenotype.datatfile <- 'dataset.phenotype.Svenson_DO_HFD.v12.Rds'
phenotype.data <- readRDS(phenotype.datatfile)

library(tibble)
chol.phenotypes <- 
  phenotype.data$data$raw %>% 
  as.data.frame %>%
  select(chol2) %>%
  mutate(chol2.scale = scale(chol2,center=T)) %>%
  rownames_to_column("ID")

library(forcats)
group.data <- 
  phenotype.data$annot.samples %>%
  select(mouse.id,sex,diet) %>% 
  column_to_rownames('mouse.id') %>% 
  mutate_all(as.factor) %>%
  rownames_to_column('ID')

pheno.data.all <- full_join(chol.phenotypes,group.data,by="ID")
```

# DESeq Analysis

See https://www.bioconductor.org/packages/release/bioc/vignettes/DESeq2/inst/doc/DESeq2.html

## Building Counts Table

Counts tables must be in same order as the phenotype data

```{r counts-table}
library(DESeq2)

pheno.data.seq <- 
  pheno.data.all %>% 
  filter(ID %in% colnames(rna.data)) %>% #only phenotype data with seq data (475 mice)
  filter(!is.na(chol2)) %>% # cannot have undetermined cholesterol
  column_to_rownames("ID")

counts.table <-  t(rna.data.raw) %>% #get normalized counts table %>%
  as.data.frame %>%
  select(all_of(rownames(pheno.data.seq))) %>% #only counts tables with phenotype data
  mutate_all(as.integer) # made them all integers

#confirming they are present and in the right order
all(rownames(pheno.data.seq) %in% colnames(counts.table))
all(rownames(pheno.data.seq) == colnames(counts.table))
```

## Creating DESeq Objects

```{r simple-models}
dds.simple <- DESeqDataSetFromMatrix(countData = counts.table,
                              colData = pheno.data.seq,
                              design = ~ chol2.scale)

smallestGroupSize <- 3
keep <- rowSums(counts(dds.simple) >= 10) >= smallestGroupSize
dds.simple <- dds.simple[keep,]
dds.simple <- DESeq(dds.simple)
vsd.simple <- vst(dds.simple, blind=FALSE)
#rld.simple <- rlog(dds.simple, blind=FALSE)
results.simple <- results(dds.simple, alpha=0.05) 
results.simple %>% summary
plotMA(results.simple)
plotPCA(vsd.simple, intgroup=c('sex','diet'))
results.simple %>% 
  as.data.frame %>%
  rownames_to_column('gene.id') %>%
  left_join(gene.annotation,by=c('gene.id'))%>% 
  arrange(-abs(log2FoldChange)) -> results.simple.annotated

results.simple.annotated %>%
  head %>%
  knitr::kable(caption="Top genes by fold change")

write_csv(as.data.frame(results.simple.annotated), "Cholesterol TWAS - Crude.csv")

normalized.counts <-  counts(dds.simple, normalized=TRUE)%>%  #get normalized counts table 
  as.data.frame %>%
  select(all_of(rownames(pheno.data.seq))) %>% #only counts tables with phenotype data
  mutate_all(as.integer) # made them all integers

write_tsv(as.data.frame(t(normalized.counts)),'Normalized_counts.tsv') # this is all the counts f or the sequenced data, what we want is a 835 long by 11770 wide table with a lot of NAs (for the samples 835-478 samples that were not sequenced)
genotype.file <- 'DO_HFD_Genome_All.csv'
genotype.data <- read_csv(genotype.file)

strains.in.order <- 
  genotype.data %>%
  dplyr::select(-Locus.Combined) %>%
  colnames

as.data.frame(t(normalized.counts))[strains.in.order,] %>% write_tsv(file="mRNA_Expression_all.txt")
```

## Adjusting for Diet and Cholesterol

```{r additive-models}
dds.additive <- DESeqDataSetFromMatrix(countData = counts.table,
                              colData = pheno.data.seq,
                              design = ~ sex + diet + chol2.scale)

smallestGroupSize <- 3
keep <- rowSums(counts(dds.additive) >= 10) >= smallestGroupSize
dds.additive <- dds.additive[keep,]
dds.additive <- DESeq(dds.additive)
vsd.additive <- vst(dds.additive, blind=FALSE)
#rld.addiitve <- rlog(dds.additive, blind=FALSE)
results.additive <- results(dds.additive, alpha=0.05)
results.additive %>% summary
plotMA(results.additive)
#plotPCA(vsd.additive, intgroup=c('sex','diet'))
results.additive <- results(dds.additive)
results.additive %>% 
  as.data.frame %>%
  rownames_to_column('gene.id') %>%
  left_join(gene.annotation,by=c('gene.id'))%>% 
  arrange(-abs(log2FoldChange)) -> results.additive.annotated

results.additive.annotated %>%
  head %>%
  knitr::kable(caption="Top genes by fold change, adjusting for sex and diet")


write_csv(as.data.frame(results.additive.annotated), "Cholesterol TWAS - Sex and Diet Adjusted.csv")
```

## Adjusting for Sex

```{r sex-models}
dds.sex <- DESeqDataSetFromMatrix(countData = counts.table,
                              colData = pheno.data.seq,
                              design = ~ sex + chol2.scale)

smallestGroupSize <- 3
keep <- rowSums(counts(dds.sex) >= 10) >= smallestGroupSize
dds.sex <- dds.sex[keep,]
dds.sex <- DESeq(dds.sex)
vsd.sex <- vst(dds.sex, blind=FALSE)
#rld.sex <- rlog(dds.sex, blind=FALSE)
results.sex <- results(dds.sex, alpha=0.05)
results.sex %>% summary
plotMA(results.sex)
#plotPCA(vsd.sex, intgroup=c('sex','diet'))

results.sex <- results(dds.sex)
results.sex %>% 
  as.data.frame %>%
  rownames_to_column('gene.id') %>%
  left_join(gene.annotation,by=c('gene.id'))%>% 
  arrange(-abs(log2FoldChange)) -> results.sex.annotated

results.sex.annotated %>%
  head %>%
  knitr::kable(caption="Top genes by fold change, adjusting for sex")
write_csv(as.data.frame(results.sex.annotated), "Cholesterol TWAS - Sex Adjusted.csv")
```

# QTL Nominated Genes

```{r }
library(knitr)
Genes.of.interest <- c("Apoa2","Cdkal1","Apoa1","Scarb1","Mup12","Cyp2c69","Ly6d","Pnpla3","Sult2a7","Lpin1", "Asap2", "Ppp2r5e", "Syne2", "Gphn", "Dusp22", "Foxq1", "Gadd45g", "Ctla2a", "Ntrk2", "Naip2", "Mrps27", "Marveld2", "Cd180", "Pde4d")
results.sex.annotated %>% 
  filter(symbol %in% Genes.of.interest) %>% 
  kable
```

# QTL position nominated associated mRNA

```{r}
#Peak 12a
results.sex.annotated %>% 
  filter(chr==12) %>%
  filter(start.true>16300000 & end.true<27800000 )%>%
  arrange(-abs(log2FoldChange)) %>%
  kable
#Peak 12b
results.sex.annotated %>% 
  filter(chr==12) %>%
  filter(start.true>75000000 & end.true<80000000 )%>%
  arrange(-abs(log2FoldChange)) %>%
  kable
#Peak 13a
results.sex.annotated %>% 
  filter(chr==13) %>%
  filter(start.true>28011631 & end.true<32375634 )%>%
  arrange(-abs(log2FoldChange)) %>%
  kable
#Peak 13b
results.sex.annotated %>% 
  filter(chr==13) %>%
  filter(start.true>51000000 & end.true<64000000 )%>%
  arrange(-abs(log2FoldChange)) %>%
  kable
#Peak 13c
results.sex.annotated %>% 
  filter(chr==13) %>%
  filter(start.true>97800000 & end.true<110000000 )%>%
  arrange(-abs(log2FoldChange)) %>%
  kable



```

# Stratifying the Analyses by Diet

## NCD Only TWAS

Still adjusting for sex

## HFD Only TWAS

Still adjusting for sex

# Plots of Gene-Cholesterol Relationships

Genes that were identified by both DO HFD viewer and by the TWAS analysis per peak.

12a: high impact variants via Svenson lab, Lpin1 (Intron, downstream, noncoding trans exon) (Asap2 position nom, interesting from TWAS but not DOHFD viewer) 

12b: high impact variants via Svenson lab, Ppp2r5e (missense F/L) Syne2 (missense), (just TWAS, Gphn)
-has missense filter for GWAS 

13a: only cdkl1 (NMD transcript, downstream, intron, missense for C57->L/M), TWAS ONLY: (Dusp22 (NMD transcript, intron), Foxq1(3and 5 prime UTR, downstream  
-Dusp22 and foxq1 were not top hits for Svenson data but removing the filter reveals the type of variant

13b: Gadd45g (missense A/S) (Ctla2a, Ntrk2, TWAS only) 

13c: Naip2 (missense, H/L, G/R, D/N) Mrps27 (missense P/S) Marveld2 (missense S/L) (Cd180 Pde4d, TWAS only) 
-Has missense filter on GWAS

##Interesting mRNA cholesterol plots between diets 
-mrps27
-marveld2

```{r mRNA-cholesterol-plots}
gene.ids <- 
  gene.annotation %>%
  filter(symbol %in% Genes.of.interest) %>%
  select(gene.id,symbol)

library(ggplot2)

for (row in rownames(gene.ids)) {
  gene.id <- gene.ids[row,] %>% pull(gene.id)
  gene.symbol <- gene.ids[row,] %>% pull(symbol)
  gene.counts <- t(normalized.counts[gene.id,]) %>% as.data.frame
  gene.counts.chol <- merge(gene.counts,pheno.data.seq,by='row.names') %>%
    dplyr::rename('Expression'=2)
  print(ggplot(gene.counts.chol,
         aes(y=Expression,
             x=chol2,
             col=sex)) +
    geom_point(size=0.5) +
    facet_grid(.~diet) +
    geom_smooth(method="lm") +
    theme_classic(base_size=18) +
    labs(y="mRNA Expression",
         x="Cholesterol (mg/dL)",
         title=gene.symbol))
}
```

## Multivariate Statistics

```{r genes-of-interest-stats}
stats.table <- data.frame()
library(broom)
for (row in rownames(gene.ids)) {
  gene.id <- gene.ids[row,] %>% pull(gene.id)
  gene.symbol <- gene.ids[row,] %>% pull(symbol)
  gene.counts <- t(normalized.counts[gene.id,]) %>% as.data.frame
  gene.counts.chol <- merge(gene.counts,pheno.data.seq,by='row.names') %>%
    dplyr::rename('Expression'=2)
  lm.int <- lm(chol2~Expression+sex+diet+Expression:diet,data=gene.counts.chol)
  lm.add <- lm(chol2~Expression+sex,data=gene.counts.chol)
  stats.table[row,'symbol'] <- gene.symbol
  stats.table[row,'coef.add'] <- tidy(lm.add)[2,'estimate']
  stats.table[row,'coef.add.se'] <- tidy(lm.add)[2,'std.error']
  stats.table[row,'coef.add.pval'] <- tidy(lm.add)[2,'p.value']
  stats.table[row,'coef.int.pval'] <- tidy(lm.int)[5,'p.value']
}

knitr::kable(stats.table,caption="Sex adjusted associations between cholesterol and expression, and evidence of diet x expression interaction")
```

# Session Information

```{r session-info}
sessionInfo()
```
